from selenium.webdriver import Firefox
from selenium.webdriver.firefox.options import Options
from selenium.webdriver.firefox.service import Service
from webdriver_manager.firefox import GeckoDriverManager

from config.settings import set_new_folder_or_get_existent


# =============================================================================
# Запихиваем настройки в объект Options()
# =============================================================================
options = Options()
# --headless -> Run without GUI (запуск браузера без графического интерфейса).
options.add_argument('--headless')
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# --private-window -> Open new private window. Запуск браузера в приватном
# режиме в этом режиме так-же не загружаются и не сохраняются данные в кэш.
options.add_argument('--private-window')
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# --devtools -> Open DevTools on initial load (запуск с панелью разработки).
options.add_argument('--devtools')
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Загрузка профиля firefox или создание нового. Профиль нужен для хранения
# настроек, закладок, паролей, ... (профиль необходим даже в режиме private!)
options.add_argument('--profile')
options.add_argument(set_new_folder_or_get_existent('firefox_profile'))
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# --width=<int> --height=<int> указать какого размера должно быть окно
# браузера при его запуске (данный способ предпочтительнее).
options.add_argument('--width=1920')
options.add_argument('--height=1080')
# ОЧЕНЬ ВАЖНО! Всегда стоит фиксировать размер экрана. Так как могут
# использоваться координаты относительно размера окна, и если например делается
# движение мышкой на 250 пикселей что-бы кликнуть элемент, то в моменте все
# будет работать, но что если поменять размер окна и сделать его
# (10_000 Х 10_000) то этими 250 пикселями мы не попадем в элемент (так как в
# момент разработки размер был другим).
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Отключение опции сохранения данных в кэш (если используем браузер в режиме
# private эти настройки можно опустить т.к. в этом режиме кеш не сохраняется).
# (скрипты, картинки, ... будут загружаться всегда по новой и не сохранятся).
options.set_preference('browser.cache.disk.enable', False)
options.set_preference('browser.cache.memory.enable', False)
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Указываем папку куда firefox будет скачивать файлы.
options.set_preference(
    'browser.download.dir', set_new_folder_or_get_existent('firefox_download')
)
options.set_preference('browser.download.folderList', 2)
# =============================================================================


# =============================================================================
# Устанавливаем драйвер и передаем сделанные настройки в браузер.
# =============================================================================
service = Service(GeckoDriverManager().install())
driver = Firefox(options=options, service=service)
# =============================================================================


# =============================================================================
# Браузер firefox сам не закрывается после выполнения кода, в --headless режиме
# такое дело не нужно допускать так как будет куча ненужных процессов.
# =============================================================================
try:
    driver.get('https://expired.badssl.com/')
    print(driver.title)
    # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    # Изменение размера окна в процессе выполнения кода (так лучше не делать)
    # а если это необходимо например для проверки чего нибудь то необходимо
    # возвращать первоначальный размер (как в настройках) что-бы не было такого
    # как в замечании ОЧЕНЬ ВАЖНО! Всегда стоит фиксировать размер экрана. ...
    driver.set_window_size(500, 500)
    # Делаем что-то
    driver.set_window_size(1920, 1080)
    # !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

except Exception as exception:
    print(str(exception))
finally:
    driver.close()
    driver.quit()
# =============================================================================
